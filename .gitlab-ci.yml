include:
  - project: cs/gitlabci-templates
    file: /build-image-using-kaniko.yml

# stages defines the dependencies between the different stages of the pipeline
stages:
  - lint
  - build
  - generate
  - test
  - deploy

black:
  stage: lint
  image: pyfound/black:23.11.0
  before_script:
    - cd ./api/api
    - black --version
  script:
    - black . --check

pylint:
  stage: lint
  image: python:3.8
  before_script:
    - pip install api/
    - cd ./api
  script:
    - pylint api


build-on-push:
  stage: build
  extends: .build-image-using-kaniko
  variables:
    CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/kg-inference-api-build
    KANIKO_EXTRA_ARGS: --build-arg GITLAB_TOKEN=$CI_JOB_TOKEN --build-arg GITLAB_USERNAME='gitlab-ci-token' -f ./api/Dockerfile
    KUBERNETES_MEMORY_LIMIT: 4Gi
    KUBERNETES_MEMORY_REQUEST: 4Gi


build-and-deploy-api-image-in-registry:
  stage: deploy
  extends: .build-image-using-kaniko
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: on_success
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/kg-inference-api-dev
        CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
        REGISTRY_IMAGE_TAG: $CI_COMMIT_SHORT_SHA-$(date +%s)
    - if: $CI_COMMIT_TAG
      when: on_success
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/kg-inference-api-production
        CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
        REGISTRY_IMAGE_TAG: $CI_COMMIT_SHORT_SHA-$(date +%s)
  variables:
    KANIKO_EXTRA_ARGS: --build-arg GITLAB_TOKEN=$CI_JOB_TOKEN --build-arg GITLAB_USERNAME='gitlab-ci-token' -f ./api/Dockerfile
    KUBERNETES_MEMORY_LIMIT: 4Gi
    KUBERNETES_MEMORY_REQUEST: 4Gi


build-and-deploy-server-image-in-registry:
  stage: deploy
  extends: .build-image-using-kaniko
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: on_success
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/kg-inference-api-server-dev
        CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
        REGISTRY_IMAGE_TAG: $CI_COMMIT_SHORT_SHA-$(date +%s)
    - if: $CI_COMMIT_TAG
      when: on_success
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/kg-inference-api-server-production
        CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
        REGISTRY_IMAGE_TAG: $CI_COMMIT_SHORT_SHA-$(date +%s)
  variables:
    KANIKO_EXTRA_ARGS: --build-arg GITLAB_TOKEN=$CI_JOB_TOKEN --build-arg GITLAB_USERNAME='gitlab-ci-token'
    BUILD_PATH: "./server"
    KUBERNETES_MEMORY_LIMIT: 4Gi
    KUBERNETES_MEMORY_REQUEST: 4Gi

build-and-deploy-client-image-in-registry:
  stage: deploy
  extends: .build-image-using-kaniko
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/kg-inference-front-production
        CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
        REGISTRY_IMAGE_TAG: $CI_COMMIT_SHORT_SHA-$(date +%s)
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "dev"'
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/kg-inference-front-dev
        CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
        REGISTRY_IMAGE_TAG: $CI_COMMIT_SHORT_SHA-$(date +%s)
      when: on_success
  variables:
    KANIKO_EXTRA_ARGS: -f ./frontend/Dockerfile
    KUBERNETES_MEMORY_LIMIT: 4Gi
    KUBERNETES_MEMORY_REQUEST: 4Gi



# Generate sphinx documentation and stores the artifact under docs/generated/html
generate-sphinx-documentation:
  stage: generate
  image: python:3.8
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: on_success
    - if: $CI_COMMIT_TAG
      when: on_success
  script:
    - pip install docs/
    - sphinx-build -T --keep-going -b html -d _build/doctrees -c ./docs/source -D language=en ./docs/source docs/generated/html
  artifacts:
    paths:
      - docs/generated/html
  variables:
    KUBERNETES_MEMORY_LIMIT: 4Gi
    KUBERNETES_MEMORY_REQUEST: 4Gi


# Executes deployment of project documentation
deploy-sphinx-documentation:
  stage: deploy
  extends: .build-image-using-kaniko
  dependencies:
    - generate-sphinx-documentation
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: on_success
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/sphinx-documentation-dev
    - if: $CI_COMMIT_TAG
      when: on_success
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/sphinx-documentation-prod
  variables:
    KUBERNETES_MEMORY_LIMIT: 4Gi
    KUBERNETES_MEMORY_REQUEST: 4Gi
    CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
    REGISTRY_IMAGE_TAG: $CI_COMMIT_SHORT_SHA-$(date +%s)
    KANIKO_EXTRA_ARGS: "--build-arg GENERATED_DOCS_PATH=./docs/generated/html -f ./docs/Dockerfile"