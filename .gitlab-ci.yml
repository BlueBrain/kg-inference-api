include:
  - project: cs/gitlabci-templates
    file: /build-image-using-kaniko.yml

# stages defines the dependencies between the different stages of the pipeline
stages:
  - generate
  - test
  - deploy

# TODO: to be added back as soon as we have a SA token
#test-api:
#  stage: test
#  image: python:3.7
#  rules:
#    - if: '$CI_COMMIT_BRANCH == "dev"'
#      when: on_success
#    - if: $CI_COMMIT_TAG
#      when: on_success
#  before_script:
#    - apt-get update && apt-get install -y iputils-ping
#    - pip install --no-cache-dir --upgrade -r ./requirements.txt
#    - pip install git+https://$GITLAB_USERNAME:$GITLAB_TOKEN@bbpgitlab.epfl.ch/dke/apps/kg-inference
#  script:
#    - pytest ./api/test.py -W ignore::DeprecationWarning
#  variables:
#    NEXUS_TOKEN: $NEXUS_TOKEN
#    BBP_NEXUS_ENDPOINT: https://bbp.epfl.ch/nexus/v1
#    ENVIRONMENT: LOCAL
#    RULES_BUCKET: bbp/inference-rules
#    DATAMODELS_BUCKET: neurosciencegraph/datamodels
#    WHITELISTED_CORS_URLS: http://api:8000

build-and-deploy-api-image-in-registry:
  stage: deploy
  extends: .build-image-using-kaniko
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: on_success
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/kg-inference-api-dev
        CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
        REGISTRY_IMAGE_TAG: $CI_COMMIT_SHORT_SHA-$(date +%s)
    - if: $CI_COMMIT_TAG
      when: on_success
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/kg-inference-api-production
        CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
        REGISTRY_IMAGE_TAG: $CI_COMMIT_SHORT_SHA-$(date +%s)
  variables:
    KANIKO_EXTRA_ARGS: --build-arg GITLAB_TOKEN=$GITLAB_TOKEN --build-arg GITLAB_USERNAME=$GITLAB_USERNAME
    KUBERNETES_MEMORY_LIMIT: 4Gi
    KUBERNETES_MEMORY_REQUEST: 4Gi

build-and-deploy-client-image-in-registry:
  stage: deploy
  extends: .build-image-using-kaniko
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/kg-inference-front-production
        CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
        REGISTRY_IMAGE_TAG: $CI_COMMIT_SHORT_SHA-$(date +%s)
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "dev"'
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/kg-inference-front-dev
        CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
        REGISTRY_IMAGE_TAG: $CI_COMMIT_SHORT_SHA-$(date +%s)
      when: on_success
  variables:
    BUILD_PATH: $CI_PROJECT_DIR/kg-inference-frontend
    KUBERNETES_MEMORY_LIMIT: 4Gi
    KUBERNETES_MEMORY_REQUEST: 4Gi



# Generate sphinx documentation and stores the artifact under docs/generated/html
generate-sphinx-documentation:
  stage: generate
  image: python:3.8
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: on_success
    - if: $CI_COMMIT_TAG
      when: on_success
  script:
    - pip install .[docs]
    - sphinx-build -T --keep-going -b html -d _build/doctrees -c ./docs/source -D language=en ./docs/source docs/generated/html
  artifacts:
    paths:
      - docs/generated/html
  variables:
    KUBERNETES_MEMORY_LIMIT: 4Gi
    KUBERNETES_MEMORY_REQUEST: 4Gi


# Executes deployment of project documentation
deploy-sphinx-documentation:
  stage: deploy
  extends: .build-image-using-kaniko
  dependencies:
    - generate-sphinx-documentation
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: on_success
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/sphinx-documentation-dev
    - if: $CI_COMMIT_TAG
      when: on_success
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/sphinx-documentation-prod
  variables:
    KUBERNETES_MEMORY_LIMIT: 4Gi
    KUBERNETES_MEMORY_REQUEST: 4Gi
    CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
    REGISTRY_IMAGE_TAG: $CI_COMMIT_SHORT_SHA-$(date +%s)
    BUILD_PATH: $CI_PROJECT_DIR/docs
    KANIKO_EXTRA_ARGS: "--build-arg GENERATED_DOCS_PATH=generated/html"